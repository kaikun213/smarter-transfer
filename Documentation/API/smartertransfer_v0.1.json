{
  "swagger": "2.0",
  "info": {
    "title": "SmartTransfer",
    "version": "",
    "description": "This is the development api specification of the SmartTransfer-Application. Press \"Show\" to expand on sections to see more details.\n\n"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/merchants?{page}&{limit}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "OK",
                "data": [
                  {
                    "merchantId": 1,
                    "keshId": 1,
                    "companyName": "testCompany",
                    "phoneNumber": "testPhoneNumber",
                    "email": "testEmail",
                    "contactForename": "testContactForename",
                    "contactSurname": "testContactSurname",
                    "contactEmail": "testContactEmail",
                    "country": "testCountry",
                    "city": "testCity",
                    "ustId": "testUstId",
                    "logoId": 1,
                    "websiteURL": "testWebsiteURL",
                    "shopURL": "testShopURL",
                    "ticketURL": "testTicketURL"
                  }
                ],
                "pageNumber": 1,
                "nextPage": "none",
                "total": 1
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET Merchants",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "description": "",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "limit",
            "in": "path",
            "description": "default 10",
            "required": false,
            "type": "string",
            "default": "10"
          }
        ]
      }
    },
    "/api/v1/merchants": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The merchant can not get added. Duplicate keshId error"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "ADD Merchant",
        "description": "",
        "tags": [],
        "parameters": []
      }
    },
    "/api/v1/merchants/{merchantId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "No merchant with Merchant-ID 65"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET Merchant",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The merchant can not get added. Duplicate keshId error"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "UPDATE Merchant",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "ERROR",
                "error": {
                  "errorCode": 400,
                  "description": "No merchant with Merchant-ID 65"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "DELETE Merchant",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/items/{merchantId}?{page}&{limit}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "OK",
                "data": [
                  {
                    "merchantId": 1,
                    "itemId": 1,
                    "name": "testItem",
                    "description": "testDescription",
                    "price": 20
                  }
                ],
                "pageNumber": 1,
                "nextPage": "none",
                "total": 1
              }
            }
          }
        },
        "summary": "GET Items",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant who owns the items.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "description": "",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "limit",
            "in": "path",
            "description": "default 10",
            "required": false,
            "type": "string",
            "default": "10"
          }
        ]
      }
    },
    "/api/v1/items/{merchantId}": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "OK",
                "data": {
                  "merchantId": 1,
                  "itemId": 1,
                  "name": "testItem",
                  "description": "testDescription",
                  "price": 20
                }
              }
            }
          }
        },
        "summary": "ADD Item",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant who owns the items.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/items/{merchantId}/{itemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "No item with Item-ID 65"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET Item",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant who owns the items.",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The id of the item",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "ERROR",
                "error": {
                  "errorCode": 400,
                  "description": "No item with Item-ID 65"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "UPDATE Item",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The id of the merchant who owns the items.",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The id of the item",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/menus/{merchantId}?{page}&{limit}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "OK",
                "data": [
                  {
                    "merchanId": 1,
                    "menuId": 1,
                    "name": "testerInput",
                    "items": [
                      {
                        "merchantId": 1,
                        "itemId": 1,
                        "name": "testItem",
                        "description": "testDescription",
                        "price": 20
                      }
                    ]
                  }
                ],
                "pageNumber": 1,
                "nextPage": "none",
                "total": 1
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET Menus",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the menus",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "description": "",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "limit",
            "in": "path",
            "description": "default 10",
            "required": false,
            "type": "string",
            "default": "10"
          }
        ]
      }
    },
    "/api/v1/menus/{merchantId}": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "MenuId will be generated, do not include."
                  }
                }
              ]
            }
          }
        },
        "summary": "ADD Menu",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the menus",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/menus/{merchantId}/{menuId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "No menu with Menu-ID 65"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET Menu",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the menus",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuId",
            "in": "path",
            "description": "the id of the menu",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The menu can not get updated. The merchant is not the owner of the menu"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "UPDATE Menu",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the menus",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuId",
            "in": "path",
            "description": "the id of the menu",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "ERROR",
                "error": {
                  "errorCode": 400,
                  "description": "No menu with Menu-ID 65"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "DELETE Menu",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the menus",
            "required": true,
            "type": "string"
          },
          {
            "name": "menuId",
            "in": "path",
            "description": "the id of the menu",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/pos/{merchantId}?{page}&{limit}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "OK",
                "data": [
                  {
                    "merchanId": 1,
                    "posId": 1,
                    "menuId": 1,
                    "location": {
                      "lon": 12.21,
                      "lat": 32.1
                    }
                  }
                ],
                "pageNumber": 1,
                "nextPage": "none",
                "total": 1
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET POSs",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the POS",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "description": "",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "limit",
            "in": "path",
            "description": "default 10",
            "required": false,
            "type": "string",
            "default": "10"
          }
        ]
      }
    },
    "/api/v1/pos/{merchantId}": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "PosId will be generated, do not include."
                  }
                }
              ]
            }
          }
        },
        "summary": "ADD POS",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the POS",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/pos/{merchantId}/{posId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "No POS with POS-ID 65"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET POS",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the POS",
            "required": true,
            "type": "string"
          },
          {
            "name": "posId",
            "in": "path",
            "description": "the id of the POS",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The POS can not get updated. The merchant is not the owner of the POS"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "UPDATE POS",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the POS",
            "required": true,
            "type": "string"
          },
          {
            "name": "posId",
            "in": "path",
            "description": "the id of the POS",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "ERROR",
                "error": {
                  "errorCode": 400,
                  "description": "No POS with POS-ID 65"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "DELETE POS",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "the id of the merchant who owns the POS",
            "required": true,
            "type": "string"
          },
          {
            "name": "posId",
            "in": "path",
            "description": "the id of the POS",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The user can not get added. Duplicate keshId error"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "ADD User",
        "description": "",
        "tags": [],
        "parameters": []
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "No user with User-ID 65"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "GET User",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "status": "ERROR",
                  "error": {
                    "errorCode": 400,
                    "description": "The user can not get updated. Duplicate keshId error"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "UPDATE User",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "status": "ERROR",
                "error": {
                  "errorCode": 400,
                  "description": "No user with User-ID 65"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "DELETE User",
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "Merchants": {},
    "MerchantsModel": {},
    "Merchant": {},
    "MerchantModel": {},
    "Items": {},
    "ItemsModel": {},
    "Item": {},
    "ItemModel": {},
    "Menus": {},
    "MenusModel": {},
    "Menu": {},
    "MenuModel": {},
    "PointOfSales": {},
    "PointOfSalesModel": {},
    "POS": {},
    "POSModel": {},
    "Users": {},
    "UsersModel": {},
    "User": {},
    "UserModel": {}
  }
}